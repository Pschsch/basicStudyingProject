package com.maxonchik.studyingproj;

public class SchildtAswersForQuestions {
    /*Глава 1. Основы Java
    1)Байт-код - это тип кода, генерируемый компилятором из исходного кода в процессе компиляции. Далее, чтобы выполнить этот код, он интерпретируется интерпретатором
    Байт-код - язык виртуальной машины Java. Практическая цель - улучшение переносимости и безопасности программного обеспечения,
    т.к нет нужды взаимодействовать  с программой на уровне системы.
    2)Инкапсуляция, полиморфизм, наследование
    3)С объявления public static void main - т.е метода main с параметрами(String[] args), которые означают массив строк.
    4)Перменная - ячейка памяти, хранящяя присваиваемое ей значение в данный момент времени выполнения программы.
    5)67count - недопустимое имя переменной.
    6) //Однострочный комментарий
        /* Многострочный комментарий*/                                                      /*
    7) if (perem1<perem2){                          if(условие) оператор или {Блок кода};
          System.out.println("Условие работает");
    }
    for(int i=0; i<100; i++){                       for(переменная, условие, итерация) {блок кода};
            System.out.println("Цикл cработал "+ i +" раз");
    }
    8)Блок кода создается с помощью фигурных скобок: { блок кода }
    9)  double i=100
        double u=i*0.17
        System.out.println("Лунный вес равен " + u + " кг"); //более объектно-ориентированная версия в классе Main
    10)Написан в Main.java
    11)Зависит от того, какого рода опечатка и где). Скорее всего, здесь подразумевается ошибка компилятора.
    12)Не имеет значения, главное, чтобы инструкция завершалась символом окончания инструкции ;
    Глава 2. Типы данных и операции над ними.
    1)Так как Java - виртуальная машина и используется для всех типов процессоров, то необходимо строго определять диапазон
    значений. Область действия строго определяется, чтобы использование переменных было более понятным и предсказуемым.
    2)Символьный тип в Java имеет разрядность 16 бит и использует кодировку UTF-16, в отличие от других языков, где используется
    кодировка ASCII.
    3)Нет, неверно. Только одно значение может быть истинным, одно ложное!
    4),5) System.out.println("Один\nДва\nТри");
    6)for(i=0; i<10; i++){
    int sum;
    sum = sum + i;          //Правильная программа в классе main
    }
    System.out.println("Summa: "+sum); Метод вывода на консоль находится за блоком кода с переменной sum.
    7)Префиксная форма записи выполняется перед тем, как использоваться в выражении, постфиксная - после того, как использоваться.
    8)Строка 44 в Main.java с пояснением
    9)До int
    10)Когда необходимо получить результат конкретного типа, а не автоматически заданного при вычислении
    11)Прога в классе main
    12)Нет
    13)Да, переменные действуют только в рамках блока кода и в тех блоках, которые находятся внутри блока с этой переменной.
     */
        /*Глава 3. Yправляющие операторы.
        * 1)полиморфизмТест блок chapter3ex1;
         2)if(условие) оператор;
         else if(условие) оператор;
         else оператор;
        * 3) к if(y>100)
        * 4)for(i=1000;i>=0;i-=2);
        * 5)
        for (int i=0; i<num;i++)
        sum +=i;
        count = i;
        Код внутри цикла for должен быть занесен в блок
        6)Break позволяет немедленно выйти из цикла or switch operator, а также перейти в конец помеченн опреатором с помощью метки точку программы
        7)После while
        8)0 1
          2 3
          4 5
          6 7
          8 9
        9)for(i=1; i<1000; i*=2)
        System.out.println(i) chapter3ex9 блок
        10)в тестАпп chapter3ex10
        11)Бесконечный цикл - цикл, который никогда не завершается, только при наличии условия и оператора break.
        12)нет, не должна, break может перенести выполнение в любой ,именнованный меткой блок кода
        Глава 4: Классы, объекты и методы.
        1)Класс - это абстрактный шаблон для создания объектов, в котором описываются все возможные свойства объектов, используемые или котоыре
        будут использвоаны в программе. Объект - это физический экземпляр класса с конкретными значениями этих свойств.
        2)Класс определяется с помощью ключевого слова class
        3)Переменной объекта.
        4)MyCounter  = counter;
        counter = new Counter;
        5)double MyMeth(int a, int b){...} В методах и конструкторах к каждому аргументу определяется его тип, вне зависимости от того
        одинаковы они или нет.
        6)С помощью оператора return
        7)Такким же, как и имя класса
        8)Возвращает ссылку на объект из ячейки памяти с этим объектом в виде переменной объекта, выполняет инициализацию объекта,
        используя конструктор.
        9)Сборка мусора очищает ОЗУ от неиспользуемых объектов во время программы когда это нужно. Метод finalize вызывается для
        объекта перед удалением объекта из ОЗУ.
        10)this - означает ссылку к конкректному объекту, что при приписке этого слова к какому-то зачению в методе, вернется
        значение объекта,с которым метод взаимодействует. Нужен в основном для того, чтобы раскрывать локальные переменные в случае
        совпадения названий с глобальными переменными.
        11)Конструктор может иметь столько параметров, сколько прописанно в классе.
        12)void
        Глава 5 Доп. сведения о типах данных и операциях:
        1)Массив 12 элементов типа Double:
        double array[]=new array[12];
        double array[]={23.5,14.5,48,4324,2433,654,345,345,345,345,345,543};
        2)int array[]=new int[5];
        for (i=0;i<6;i++){
        array[i]=i+1;
        System.out.println(array[i]);
        }
        3)QueueUsing строка 88;
        4)Сделано в QueueUsing
        5)Метод indexOf озвращает первый символ искомой подстроки, а lastIndexOf - первой символ последней подстроки.
        6)String str = "Мне нравится Java"
        str.charAt(15);
        str.length;
        7)
        8) Поразряные операции применяются только для byte, short, int, long, char
        9)(x<0) ? y=10 : y=20;
        10) Логическая, так как поразрдяные не поддерживают булеан.
        11)Выход за границы - ошибка, использование отриц значений - нет
        12)>>>
        13)queueusing also)
        14)Нельзя
        15)Можно, начиная с JDK 7.
        )*/


}
