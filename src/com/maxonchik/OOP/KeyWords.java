package com.maxonchik.OOP;

public class KeyWords {
    /*В JAVA 50 КЛЮЧЕВЫХ СЛОВ*/
 /*|---------------------------------------------------------------------------------------------------------|
   |  abstract  assert  boolean  break  byte  case  catch  char  class const  continue  default  do          |
   |  double  else  enum  extends  final  finally  float  for  goto  if  implements  import  instanceof  int |
   |  interface  long  native  new  package private  protected  public  return short  static  strictfp  super|
   |  switch    synchronized  this  throw  throws  transient  try  void  volatile   while                    |
   |---------------------------------------------------------------------------------------------------------|*/
    // abstract - обозначение абстрактных классов, методов, которые создаются в качестве базы для работы с классами-наследниками
    // assert - использование для сощдания утверждений: пример: assert boolean(){выражение}, если false - AssentionError
    // boolean - примитивный логический тип данных, может содержать значения true и false
    // break - оператор немедленного прерывания циклов, выхода из них
    // byte - примитивный целочисленный тип размером 1 байт
    // case - кейс оператора switch, в котором содержится код ,выполняемый при определенном значении константы
    // catch - ловит и обрабатывает исключение, которое было сгенерировано вручную либо образовалось в ходе выполнения программы.
    // char - притивный символьный тип, содержится 1 символ в кодировке Юникод
    // class - ключевое слово объявления класса
    // const - не используется
    // continue - оператор игнорирования момента цикла, используется, как правило, с оператором if
    // default - кейс оператора switch, выполняемый для всех остальных констант. Также необходимо для обозначения метода
    //умолчанию в интерфейсе
    // do - элемент цикла do-while, условие прописанное в do выполняется в независимости от условия, указанного в while
    // double - притимвный тип с плавающей точкой двойной точности.
    // else - используется вместе с оператором if, для выполнения кода при несоблюдении условия if
    // enum - ключевое слово для определения перечисления
    // extends - ключевое слово объявления наследования от суперкласса
    // final - модификатор доступа, свидетельствующий о том, что от класса нельзя наследоваться, а метод нельзя переопределить,
    //а переменную изменить в процессе выполнения программы
    // finally - этим ключевым словом помечается блок кода, который д/б выполнен при завершении выполнения блока try.
    // float - примитивный тип с плавающей точкой одинарной точности
    // for - цикл for
    // goto - не используется
    // if - условие if
    // implements - ключевое слово для реализации интерфейса в классе
    // import - ключевое слово для импортирования кода других классов из других пакетов и библиотек в текущий
    // instanceof - ключевое слово для проверки принадлежности объекта к классу или его наследнику или реализующего интерфейс
    // этот оператор возвращает значение типа boolean.
    // int - примитивный целочисленный тип - 4 байта
    // interface - ключевое слово для разделения интерфейса класса и его реализации
    // long - тоже, что int, только 8 байт
    // native - объявление машинно-зависимых методов.
    // new - оператор возврата ссылки на объект в памяти в виде имени переменной объекта
    // package - ключевое слово обозначения пакета класса, выполняет ф-ию директории и предотвращения конфликтов имен
    // private - модификатор доступа, доступ только внутри класса, либо через публичные методы
    // protected - модификатор доступа, методом или классом могут пользоваться все наследник вне зависимости от того,
    // в каком они пакете и классы с одного пакета
    // public - модификатор доступа, методы и поля доступны всем классам во всех пакетах
    // return - оператор возврата значения из метода(по сути, еще и выхода например, при использовании рекурсивного метода)
    // short - как и byte, только 2 байта
    // static - ключевое слово для обозначения статических переменных и методов. Для использования этих данных нет необходимости
    //создавать экземляр класса, так как эти данные являются статическими для всего класса.
    // strictfp - если указать это слово в параметрах класса или интерфейса, то округление чисел с плавающей точкой осуществляется как
    // в первой версии Java: не округляются промежуточные значения чисел
    // super - ключевое слово для ссылки на данные родительских классов в подклассах. Применяется в конструкторах, а также для
    //предотвращения сокрытия переменных подклассов переменными суперклассов
    // switch - оператор "переключатель"
    // synchronized - ключевое слово обозначения синхронизированной единицы кода: метода или блока, т.е такой единицы, которая
    // блокирует доступ к переданному объекту, пока не выполнится
    // this - оператор присвоения ссылки на объект
    // throw - с помощью этого ключевого слова, можно вручную сгенерировать исключение.
    // throws - с помощью throws, мы указываем на необходимость обработки исключений за пределами обрабатываемого блока кода.
    // transient - если переменная экземпляра обозначена как transient, то при смене состояния, она не запоминается
    // try - с помощью него выделяется блок кода, который проверяется на исключения, которые перехватываются его парным оператором catch
    // volatile - данный модификатор говорит о том, что значение переменной может быть неожиданно изменено(для многопоточных
    // программ)
    // void - невозвращаемый тип
    // while - цикл while, выполняется, пока союлюдается заданное условие, сочетается с do

}
